version: '3.6'
services:
  ia_configmgr_agent:
    build:
      context: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ConfigMgrAgent
      dockerfile: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ConfigMgrAgent/Dockerfile
      args:
        EII_VERSION: ${EII_VERSION}
        EII_USER_NAME: ${EII_USER_NAME}
        EII_UID: ${EII_UID}
        ETCD_VERSION: v3.4.0
        UBUNTU_IMAGE_VERSION: 22.04
        PYTHON_VERSION: "3.10"
        GO_VERSION: 1.20.2
        no_proxy: ${eii_no_proxy}
        INSTALL_SOURCES: "no"
    read_only: true
    image: ${DOCKER_REGISTRY}edgeinsights/ia_configmgr_agent:4.1.1
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    restart: unless-stopped
    container_name: ia_configmgr_agent
    environment:
      SERVICES: "ConfigMgrAgent,MultiModalVisualization,DataStore,ai_toolwear_ncs,ai_tempcomp_ncs"
      AppName: "ConfigMgrAgent"
      HOST_IP: $HOST_IP
      HOST_TIME_ZONE: $HOST_TIME_ZONE
      EII_INSTALL_PATH: $EII_INSTALL_PATH
      SOCKET_DIR: $SOCKET_DIR
      TC_DISPATCHER_PATH: $TC_DISPATCHER_PATH
      DEV_MODE: $DEV_MODE
      ETCDCTL_API: 3
      ETCD_HOST: $ETCD_HOST
      ETCD_DATA_DIR: $ETCD_DATA_DIR
      ETCD_CLIENT_PORT: $ETCD_CLIENT_PORT
      ETCD_NAME: $ETCD_NAME
      ETCDROOT_PASSWORD: $ETCDROOT_PASSWORD
      ETCD_PREFIX: $ETCD_PREFIX
      EII_USER_NAME: $EII_USER_NAME
      PROVISION_MODE: $PROVISION_MODE
      no_proxy: $eii_no_proxy,0.0.0.0:$ETCD_CLIENT_PORT,${ETCD_HOST}
      NO_PROXY: $eii_no_proxy,0.0.0.0:$ETCD_CLIENT_PORT,${ETCD_HOST}
      NGINX_PORT: 7071
      ETCD_ENDPOINT: "$ETCD_HOST:$ETCD_CLIENT_PORT"
    networks:
    - eii
    ports:
    - $ETCD_CLIENT_PORT:$ETCD_CLIENT_PORT
    - 7071:7071
    - 7777:7070
    ipc: "none"
    volumes:
    - ./Certificates:/EII/Certificates:rw
    - ./eii_config.json:/EII/etcd/config/eii_config.json
    - $EII_INSTALL_PATH/data/etcd:$ETCD_DATA_DIR
    - $EII_INSTALL_PATH:$EII_INSTALL_PATH
    - $EII_INSTALL_PATH/models/:/app/models/
    - $EII_INSTALL_PATH/sockets:$SOCKET_DIR
    - $EII_INSTALL_PATH/data:/data
    - $EII_INSTALL_PATH/tools_output:/tools_output
    - $EII_INSTALL_PATH/saved_images:/saved_images
    - $EII_INSTALL_PATH/rde:/rde
    - $TC_DISPATCHER_PATH:$TC_DISPATCHER_PATH
    - "vol_etcd_keeper:/opt/nginx"
    - "vol_etcd_keeper_nginx_cache:/var/cache/nginx"
    - "vol_etcd_keeper_nginx_pid:/var/run"
  multimodal-data-visualization:
    image: ${DOCKER_REGISTRY}intel/multimodal-data-visualization:4.0.2
    container_name: multimodal-data-visualization
    hostname: multimodal-data-visualization
    build:
      context: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../Visualizer/multimodal-data-visualization
      args:
        EII_VERSION: ${EII_VERSION}
        CONFIGMGR_LIB_VERSION: ${EII_VERSION}
        GRAFANA_VERSION: "9.0.2"
        EII_UID: ${EII_UID}
        CONFIGMGR_LIB_VER: 4.0.2
        MSGBUS_LIB_VERSION: 4.0.0
        UTILS_LIB_VERSION: 4.0.0
        EII_USER_NAME: ${EII_USER_NAME}
        ALPINE_VERSION: "3.15"
        EII_SOCKET_DIR: "/opt/intel/eii/sockets"
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}/main
        PYPI_SRC: ${PYPI_SRC}/main
        MSGBUS_WHL: eii_msgbus-4.0.0-cp310-cp310-manylinux2014_x86_64.whl
        CFGMGR_WHL: eii_configmgr-4.0.2-cp310-cp310-manylinux2014_x86_64.whl
    read_only: false #################
    restart: unless-stopped
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "MultiModalVisualization"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST},ia_influxdb
      NO_PROXY: ${ETCD_HOST},ia_influxdb
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      HOST_IP: ${HOST_IP}
      MODE: "EII"
      INFLUX_SERVER: "ia_influxdb"
      GRAFANA_SERVER: '0.0.0.0'
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      PROVISION_MODE: ${PROVISION_MODE}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "vol_temp_grafana:/tmp"
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/MultiModalVisualization:/run/secrets/MultiModalVisualization:ro
    - /home/edge_insights_industrial/images:/usr/share/grafana/public/images:rw ############################存放要在grafana顯示的image
    - /path/to/certs:/etc/grafana/certs

    user: root  ##### 使用 root 用戶
    ports:
    - 3000:3000


  ia_datastore:
    build:
      context: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../DataStore
      dockerfile: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../DataStore/Dockerfile
      args:
        UBUNTU_IMAGE_VERSION: 22.04
        EII_VERSION: ${EII_VERSION}
        CONFIGMGR_LIB_VERSION: 4.0.2
        GRPC_VERSION: 1.0.1
        MSGBUS_LIB_VERSION: 4.0.0
        UTILS_LIB_VERSION: 4.0.0
        EII_UID: 1999
        EII_USER_NAME: eiiuser
        CMAKE_INSTALL_PREFIX: ${EII_INSTALL_PATH}
        EII_INSTALL_PATH: ${EII_INSTALL_PATH}
        GO_VERSION: 1.21.1
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}/main
        GO_PKG_SRC: ${PKG_SRC}/main
        RUN_TESTS: "OFF"
        INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
        INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
        MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
        MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
        INSTALL_SOURCES: "no"
    read_only: true
    ipc: "none"
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    image: ${DOCKER_REGISTRY}edgeinsights/ia_datastore:4.2.1
    container_name: ia_datastore
    hostname: ia_datastore
    restart: unless-stopped
    environment:
      AppName: "DataStore"
      DEV_MODE: ${DEV_MODE}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
      PROFILING_MODE: ${PROFILING_MODE}
      no_proxy: ${ETCD_HOST}, ${eii_no_proxy}, ia_influxdb, ia_miniodb, ia_tdenginedb
      NO_PROXY: ${ETCD_HOST}, ${eii_no_proxy}, ia_influxdb, ia_miniodb, ia_tdenginedb
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      INFLUXDB_TLS_CIPHERS: 
        TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
    - ./Certificates/DataStore/:/run/secrets/DataStore:ro
    - ./Certificates/DataStore_Server/:/run/secrets/DataStore_Server:ro
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - vol_influxdb_conf:/tmp/influxdb:rw
    ports:
    - 65145:65145
    - 65030:65030
    - 65031:65031
    - 65032:65032
    - 65033:65033
    - 65034:65034
    - 65137:65137
    networks:
    - eii
  ia_influxdb:
    image: influxdb:1.8.7
    container_name: ia_influxdb
    ports:
      - "8086:8086"   # 映射容器的 8086 端口到宿主机的 8086 端口###################
    hostname: ia_influxdb
    restart: unless-stopped
    ipc: "none"
    read_only: true
    security_opt:
    - no-new-privileges
    networks:
    - eii
    environment:
      AppName: "DataStore"
      INFLUXDB_USERNAME: ${INFLUXDB_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD}
      no_proxy: ${ETCD_HOST}, ${eii_no_proxy}, ia_datastore, ia_kapacitor
      NO_PROXY: ${ETCD_HOST}, ${eii_no_proxy}, ia_datastore, ia_kapacitor
      ETCD_HOST: ${ETCD_HOST}
      INFLUXDB_CONFIG_PATH: "/etc/influxdb/influxdb.conf"
      INFLUXDB_TLS_CIPHERS: 
        TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    volumes:
      # Mount for influxdb data directory and configuration
    - ${EII_INSTALL_PATH}/data/influxdb:/influxdata:rw
    - ./Certificates/DataStore_Server/:/run/secrets/DataStore:ro
    - /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../DataStore/config_files:/etc/influxdb
  ia_miniodb:
    image: minio/minio:RELEASE.2020-12-12T08-39-07Z
    container_name: ia_miniodb
    hostname: ia_miniodb
    restart: unless-stopped
    ipc: "none"
    read_only: true
    entrypoint:
    - /bin/sh
    - -c
    - |
      if [ "$DEV_MODE" == "false" ]; then
        COUNTNUM="$$(ls /root/.minio/certs/ | wc -l)"
        if [[ $$COUNTNUM -ge 2 ]]; then
                ln -s /root/.minio/certs/DataStore_Server_server_certificate.pem /root/.minio/certs/public.crt
                ln -s /root/.minio/certs/DataStore_Server_server_key.pem /root/.minio/certs/private.key
        else
                echo "Certificates not found in /root/.minio/certs folder"
                exit 1
        fi
      fi
      echo "Starting MinIO server..."
      minio server /mnt/data 
    security_opt:
    - no-new-privileges
    networks:
    - eii
    environment:
      AppName: "DataStore"
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      no_proxy: ${ETCD_HOST}, ${eii_no_proxy}
      NO_PROXY: ${ETCD_HOST}, ${eii_no_proxy}
      ETCD_HOST: ${ETCD_HOST}
    volumes:
      # Mount for influxdb data directory and configuration
    - ${EII_INSTALL_PATH}/data/minio:/mnt/data:rw
    - ./Certificates/DataStore_Server/:/root/.minio/certs/:rw

  ai_toolwear_ncs:
    user: root #################
    build:
      context: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ai_toolwear_ncs
      dockerfile: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ai_toolwear_ncs/Dockerfile
      args:
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        EII_VERSION: ${EII_VERSION}
        CONFIGMGR_VERSION: 4.0.2
        MSGBUS_LIB_VERSION: 4.0.0
        UTILS_LIB_VERSION: 4.0.0
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
        SOCK_DIR: ${SOCKET_DIR}
    image: ${DOCKER_REGISTRY}ai_toolwear_ncs:${EII_VERSION}
    ipc: "none"
    container_name: ai_toolwear_ncs
    hostname: ai_toolwear_ncs
    restart: unless-stopped
    read_only: false
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "ai_toolwear_ncs"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      PYTHON_VERSION: ${PYTHON_VERSION}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
    networks:
    - eii
    volumes:
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/ai_toolwear_ncs:/run/secrets/ai_toolwear_ncs:ro
    - /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/ai_toolwear_ncs/app:/app/code
    - /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/ai_toolwear_ncs/entrypoint.sh:/app/entrypoint.sh
    - /home/edge_insights_industrial/images:/home/edge_insights_industrial/images:rw ##################讓container也能rw images

    - /tmp/.X11-unix:/tmp/.X11-unix    # 映射 X11 Unix socket ############
    - /dev/bus/usb:/dev/bus/usb          # 映射 USB 設備###################
    devices:
    - /dev/dri:/dev/dri                  # 映射 DRI 設備 #####
    privileged: true
  ai_tempcomp_ncs:
    build:
      context: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ai_tempcomp_ncs
      dockerfile: 
        /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/build/../ai_tempcomp_ncs/Dockerfile
      args:
        EII_UID: ${EII_UID}
        EII_USER_NAME: ${EII_USER_NAME}
        EII_VERSION: ${EII_VERSION}
        CONFIGMGR_VERSION: 4.0.2
        MSGBUS_LIB_VERSION: 4.0.0
        UTILS_LIB_VERSION: 4.0.0
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
        no_proxy: ${eii_no_proxy}
        PKG_SRC: ${PKG_SRC}
        PYPI_SRC: ${PKG_SRC}
        MSGBUS_WHL: ${MSGBUS_WHL}
        CFGMGR_WHL: ${CFGMGR_WHL}
        SOCK_DIR: ${SOCKET_DIR}
    image: ${DOCKER_REGISTRY}ai_tempcomp_ncs:${EII_VERSION}
    ipc: "none"
    container_name: ai_tempcomp_ncs
    hostname: ai_tempcomp_ncs
    restart: unless-stopped
    read_only: false
    security_opt:
    - no-new-privileges
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 5m
    environment:
      AppName: "ai_tempcomp_ncs"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_CLIENT_PORT: ${ETCD_CLIENT_PORT}
      ETCD_PREFIX: ${ETCD_PREFIX}
      PYTHON_VERSION: ${PYTHON_VERSION}
      READ_CONFIG_FROM_FILE_ENV: ${READ_CONFIG_FROM_FILE_ENV}
      DISPLAY: ${DISPLAY}           # 支持 GUI 显示

    networks:
    - eii
    volumes:
    - "${EII_INSTALL_PATH}/sockets:${SOCKET_DIR}"
    - ./Certificates/ai_tempcomp_ncs:/run/secrets/ai_tempcomp_ncs:ro
    - /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/ai_tempcomp_ncs/app:/app/code
    - /home/edge_insights_industrial/Edge_Insights_for_Industrial_4.1.0/IEdgeInsights/ai_tempcomp_ncs/entrypoint.sh:/app/entrypoint.sh
    - /home/edge_insights_industrial/images:/home/edge_insights_industrial/images:rw ##################讓container也能rw images
    
    - /dev/bus/usb:/dev/bus/usb          # 映射 USB 設備###################
    - /tmp/.X11-unix:/tmp/.X11-unix    # 映射 X11 Unix socket ############
    - "/dev/video0:/dev/video0"          # 映射 USB 設備###################
    devices:
    - /dev/dri:/dev/dri                  # 映射 DRI 設備 #####
    - /dev/video0:/dev/video0  # 将主机摄像头映射到容器

    privileged: true
networks:
  eii:
    driver: bridge
volumes:
  vol_etcd_keeper:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_etcd_keeper_nginx_cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_etcd_keeper_nginx_pid:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_temp_grafana:
    name: "visualization_grafana_vol"
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_influxdb_conf:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
